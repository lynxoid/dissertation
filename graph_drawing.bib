@incollection{Abello2005,
abstract = {Compound-fisheye views are introduced as a method for the display and interaction with large graphs. The method relies on a hierarchical clustering of the graph, and a generalization of the traditional fisheye view, together with a treemap representation of the cluster tree.},
address = {Berlin, Heidelberg},
author = {Abello, James and Kobourov, Stephen and Yusufov, Roman},
booktitle = {Graph Drawing},
doi = {10.1007/b105810},
editor = {Pach, J\'{a}nos},
isbn = {978-3-540-24528-5},
pages = {431--441--441},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Visualizing Large Graphs with Compound-Fisheye Views and Treemaps}},
url = {http://www.springerlink.com/content/b61gl4fp4dv63j11/},
volume = {3383},
year = {2005}
}
@inproceedings{Albrecht2010,
abstract = {Much of the data generated and analyzed in the life sciences can be interpreted and represented by networks or graphs. Network analysis and visualization methods help in investigating them, and many universal as well as special-purpose tools and libraries are available for this task. However, the two fields of graph drawing and network biology are still largely disconnected. Hence, visualization of biological networks does typically not apply state-of-the-art graph drawing techniques, and graph drawing tools do not respect the drawing conventions of the life science community. In this paper, we analyze some of the major problems arising in biological network visualization. We characterize these problems and formulate a series of open graph drawing problems. These use cases illustrate the need for efficient algorithms to present, explore, evaluate, and compare biological network data. For each use case, problems are discussed and possible solutions suggested.},
address = {Berlin, Heidelberg},
author = {Albrecht, Mario and Kerren, Andreas and Klein, Karsten and Kohlbacher, Oliver and Mutzel, Petra and Paul, Wolfgang and Schreiber, Falk and Wybrow, Michael},
doi = {10.1007/978-3-642-11805-0},
editor = {Eppstein, David and Gansner, Emden R.},
isbn = {978-3-642-11804-3},
pages = {256--267--267},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{On Open Problems in Biological Network Visualization}},
url = {http://www.springerlink.com/content/g81291172m678171/},
volume = {5849},
year = {2010}
}
@incollection{Arvo2002,
abstract = {There are two complementary approaches to graph drawing: algorithmic and interactive. By algorithmic graph drawing we mean the automatic placement of vertices and routing of edges using heuristics to improve understandability. Interactive graph drawing, on the other hand, implies that a user directly influences at least some low-level aspects of graph layout, either by direct placement of vertices and edges, or by providing some form of feedbackto the system. Interactively engaging the user is in some instances unavoidable. When a user desires a dificult-to-quantify aesthetic quality of the graph, or is incrementally constructing a graph (such as a state diagram for an automaton) as part of a problem-solving taskor pedagogical exercise, it is dificult or impossible to employ algorithmic graph drawing. In these instances it is more natural to employ a sketching metaphor in which a user draws the graph in a traditional sense. A common strategy for making interactive drawing of diagrams immediately understandable is to incorporate physical analogies; that is, to mimic some familiar real-world appearance or process. For example, the hand-drawn appearance of a diagram can be retained by preserving its unevenness and through the use of textures that impart the appearance of physical writing implements, such as pencil, ink, or chalk. It can be advantageous to retain this type of appearance in situations where userdrawn and computer-drawn diagrams coexist. The behavior of a graph that is interactively altered can also incorporate useful physical metaphors. For example, the edges adjacent to a vertex that is interactively re-positioned by a user can mimic physical linkages that stretch when pulled, and bend or contract when pushed. Such behaviors are natural in that they are almost immediately plausible and predictable to a user. However, not all interactive techniques can bene.t from physical metaphors, for some transcend the capabilities of physical media. For example, recognition of hand-drawn elements, such as those representing vertices and edges, are often combined with gradual morphing that can improve the appearance of the diagram. Since physical writing surfaces exhibit no analogous behavior, a spectrum of possibilities has been explored. One approach that has been successfully applied in the context of graph drawing is the approach known as fluid sketching in which drawing and morphing occur nearly simultaneously. There are many potential combinations of algorithmic and interactive graph drawing to explore, such as the graceful re-routing of edges as a user interactively re-positions a vertex, or systems in which a user modi.es automatically generated graphs, or in which local improvements are automatically applied to user-drawn graphs.},
address = {Berlin, Heidelberg},
author = {Arvo, James},
booktitle = {Graph Drawing},
doi = {10.1007/3-540-36151-0},
editor = {Goodrich, Michael T. and Kobourov, Stephen G.},
isbn = {978-3-540-00158-4},
month = nov,
pages = {259--272--272},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Techniques for Interactive Graph Drawing}},
url = {http://www.springerlink.com/content/fd4fuarr9m5l2bav/},
volume = {2528},
year = {2002}
}
@incollection{Bachmaier2005,
abstract = {Gravisto, the Graph Visualization Toolkit, is more than a (Java-based) editor for graphs. It includes data structures, graph algorithms, several layout algorithms, and a graph viewer component. As a general toolkit for the visualization and automatic layout of graphs it is extensible with plug-ins and is suited for the integration in other Java-based applications.},
address = {Berlin, Heidelberg},
annote = {An overview of Gravisto's architecture},
author = {Bachmaier, Christian and Brandenburg, Franz and Forster, Michael and Holleis, Paul and Raitner, Marcus},
booktitle = {Graph Drawing},
doi = {10.1007/b105810},
editor = {Pach, J\'{a}nos},
isbn = {978-3-540-24528-5},
pages = {502--503--503},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Gravisto: Graph Visualization Toolkit}},
url = {http://www.springerlink.com/content/7x5x56dlhcawqu54/},
volume = {3383},
year = {2005}
}
@inproceedings{Baur2008,
abstract = {We propose a layout algorithm for micro/macro graphs, i.e. relational structures with two levels of detail. While the micro-level graph is given, the macro-level graph is induced by a given partition of the micro-level vertices. A typical example is a social network of employees organized into different departments. We do not impose restrictions on the macro-level layout other than sufficient thickness of edges and vertices, so that the micro-level graph can be placed on top of the macro-level graph. For the micro-level graph we define a combinatorial multi-circular embedding and present corresponding layout algorithms based on edge crossing reduction strategies.},
address = {Berlin, Heidelberg},
annote = {fig 6 - the layouts b-d are completely the same, yet one of them is supposedly random and the other two should be "improved"},
author = {Baur, Michael and Brandes, Ulrik},
doi = {10.1007/978-3-540-77537-9},
editor = {Hong, Seok-Hee and Nishizeki, Takao and Quan, Wu},
isbn = {978-3-540-77536-2},
pages = {255--267--267},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Multi-circular Layout of Micro/Macro Graphs}},
url = {http://www.springerlink.com/content/073r9m742m175683/},
volume = {4875},
year = {2008}
}
@incollection{Biedl2006,
abstract = {Two straight-line drawings P,Q of a graph (V,E) are called parallel if, for every edge (u,v) ∈ E, the vector from u to v has the same direction in both P and Q. We study problems of the form: given simple, parallel drawings P,Q does there exist a continuous transformation between them such that intermediate drawings of the transformation remain simple and parallel with P (and Q)? We prove that a transformation can always be found in the case of orthogonal drawings; however, when edges are allowed to be in one of three or more slopes the problem becomes NP-hard.},
address = {Berlin, Heidelberg},
author = {Biedl, Therese and Lubiw, Anna and Spriggs, Michael},
booktitle = {Graph Drawing},
doi = {10.1007/11618058},
editor = {Healy, Patrick and Nikolov, Nikola S.},
isbn = {978-3-540-31425-7},
keywords = {dynamic},
mendeley-tags = {dynamic},
pages = {13--24--24},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Morphing Planar Graphs While Preserving Edge Directions}},
url = {http://www.springerlink.com/content/yu52684n28166683/},
volume = {3843},
year = {2006}
}
@incollection{Bilgic2006,
abstract = {Graphs describing real world data often contain duplicate entries for names, cities, or other entities. This paper presents D-Dupe, an interactive visualization tool designed to help users to discover and resolve duplicate nodes in a social network. Users can resolve the ambiguity by merging nodes, or by specifying that the nodes are in fact distinct. The entity resolution process is iterative; as pairs of nodes are merged, additional duplicates may become apparent.},
address = {Berlin, Heidelberg},
author = {Bilgic, Mustafa and Licamele, Louis and Getoor, Lise and Shneiderman, Ben},
booktitle = {Graph Drawing},
doi = {10.1007/11618058},
editor = {Healy, Patrick and Nikolov, Nikola S.},
isbn = {978-3-540-31425-7},
pages = {505--507--507},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{D-Dupe: An Interactive Tool for Entity Resolution in Social Networks}},
url = {http://www.springerlink.com/content/px130v3n64766242/},
volume = {3843},
year = {2006}
}
@article{Blue2008,
annote = {Has a histogram of packets over time!},
author = {Blue, Ryan and Dunne, Cody and Fuchs, Adam and King, Kyle and Schulman, Aaron},
file = {:home/lynxoid/Documents/Mendeley Desktop/Unknown/Blue et al/Blue et al. - 2008 - Visualizing Real-Time Network Resource Usage.pdf:pdf},
pages = {119--135},
title = {{Visualizing Real-Time Network Resource Usage}},
volume = {0643443},
year = {2008}
}
@incollection{Blythe1996,
address = {Berlin/Heidelberg},
author = {Blythe, Jim and McGrath, Cathleen and Krackhardt, David},
booktitle = {Graph Drawing},
doi = {10.1007/BFb0021783},
editor = {Brandenburg, Franz J.},
isbn = {3-540-60723-4},
pages = {40--51--51},
publisher = {Springer-Verlag},
series = {Lecture Notes in Computer Science},
title = {{The effect of graph layout on inference from social network data}},
url = {http://www.springerlink.com/content/f17640275016m645/},
volume = {1027},
year = {1996}
}
@inproceedings{Boitmanis2008,
abstract = {We propose a visualization approach for large dynamic graph structures with high degree variation and low diameter. In particular, we reduce visual complexity by multiple modes of representation in a single-level visualization rather than abstractions of lower levels of detail. This is useful for non-interactive display and eases dynamic layout, which we address in the online scenario. Our approach is illustrated on a family of large networks featuring all of the above structural characteristics, the physical Internet on the autonomous systems level over time.},
address = {Berlin, Heidelberg},
author = {Boitmanis, Krists and Brandes, Ulrik and Pich, Christian},
doi = {10.1007/978-3-540-77537-9},
editor = {Hong, Seok-Hee and Nishizeki, Takao and Quan, Wu},
isbn = {978-3-540-77536-2},
keywords = {dynamic},
mendeley-tags = {dynamic},
pages = {365--376--376},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Visualizing Internet Evolution on the Autonomous Systems Level}},
url = {http://www.springerlink.com/content/j084776h63258307/},
volume = {4875},
year = {2008}
}
@incollection{Brandes2004,
abstract = {We propose a method for visualizing a set of related metabolic pathways using D graph drawing. Interdependent, two-dimensional layouts of each pathway are stacked on top of each other so that biologists get a full picture of subtle and significant differences among the pathways. Layouts are determined by a global layout of the union of all pathway-representing graphs using a variant of the proven Sugiyama approach for layered graph drawing that allows edges to cross if they appear in different graphs.},
address = {Berlin, Heidelberg},
author = {Brandes, Ulrik and Dwyer, Tim and Schreiber, Falk},
booktitle = {Graph Drawing},
doi = {10.1007/b94919},
editor = {Liotta, Giuseppe},
isbn = {978-3-540-20831-0},
pages = {111--122--122},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Visualizing Related Metabolic Pathways in Two and a Half Dimensions}},
url = {http://www.springerlink.com/content/p8v4vxuv7l2tnh3u/},
volume = {2912},
year = {2004}
}
@incollection{Brandes2006,
abstract = {Spectral methods are naturally suited for dynamic graph layout, because moderate changes of a graph yield moderate changes of the layout under weak assumptions. We discuss some general principles for dynamic graph layout and derive a dynamic spectral layout approach for the animation of small-world models.},
address = {Berlin, Heidelberg},
author = {Brandes, Ulrik and Fleischer, Daniel and Puppe, Thomas},
booktitle = {Graph Drawing},
doi = {10.1007/11618058},
editor = {Healy, Patrick and Nikolov, Nikola S.},
file = {:home/lynxoid/Documents/Mendeley Desktop/Graph Drawing/Brandes, Fleischer, Puppe/Brandes, Fleischer, Puppe - 2006 - Dynamic Spectral Layout of Small Worlds.pdf:pdf},
isbn = {978-3-540-31425-7},
keywords = {dynamic},
mendeley-tags = {dynamic},
pages = {25--36--36},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Dynamic Spectral Layout of Small Worlds}},
url = {http://www.springerlink.com/content/f4q5777511315080/},
volume = {3843},
year = {2006}
}
@inproceedings{Brandes2010,
abstract = {We describe an algorithm for radial layout of undirected graphs, in which nodes are constrained to the circumferences of a set of concentric circles around the origin. Such constraints frequently occur in the layout of social or policy networks, when structural centrality is mapped to geometric centrality, or when the primary intention of the layout is the display of the vicinity of a distinguished node. We extend stress majorization by a weighting scheme which imposes radial constraints on the layout but also tries to preserve as much information about the graph structure as possible.},
address = {Berlin, Heidelberg},
author = {Brandes, Ulrik and Pich, Christian},
doi = {10.1007/978-3-642-11805-0},
editor = {Eppstein, David and Gansner, Emden R.},
file = {::},
isbn = {978-3-642-11804-3},
pages = {107--118--118},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{More Flexible Radial Layout}},
url = {http://www.springerlink.com/content/16wu51467urjt457/},
volume = {5849},
year = {2010}
}
@incollection{Byun2002,
abstract = {This is a brief description of a new program for drawing protein interactions in three-dimensional space. Our program divides nodes into three groups: biconnected subgraph in the center, terminal nodes at the outermost region, and the rest in between them. Experimental results show that the program efficiently generates a clear and aesthetically pleasing drawing of large-scale protein interaction networks and that it is an order of magnitude faster than other force-directed layouts.},
address = {Berlin, Heidelberg},
author = {Byun, Yanga and Jeong, Euna and Han, Kyungsook},
booktitle = {Graph Drawing},
doi = {10.1007/3-540-36151-0},
editor = {Goodrich, Michael T. and Kobourov, Stephen G.},
isbn = {978-3-540-00158-4},
month = nov,
pages = {370--371--371},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{A Partitioned Approach to Protein Interaction Mapping}},
url = {http://www.springerlink.com/content/e9b1pvu2xv9j4bng/},
volume = {2528},
year = {2002}
}
@incollection{Diehl2002,
author = {Diehl, Stephan and G\"{o}rg, Carsten},
booktitle = {Graph Drawing},
month = nov,
pages = {23--31},
series = {Lecture Notes in Computer Science},
title = {{Graphs, They Are Changing. Dynamic Graph Drawing for a Sequence of Graphs}},
year = {2002},
publisher={{Springer Berlin Heidelberg}}
}
@article{Digiacomo2008,
annote = {"Radial drawings arise in all those applications where it is important to display a graph with the constraint that some vertices are drawn “more central” than others"
        
Vertices by centrality
        
May use this when showing hops},
author = {Digiacomo, E and Didimo, W and Liotta, G},
doi = {10.1016/j.jda.2006.12.007},
file = {:home/lynxoid/Documents/Mendeley Desktop/Journal of Discrete Algorithms/Digiacomo, Didimo, Liotta/Digiacomo, Didimo, Liotta - 2008 - Radial drawings of graphs Geometric constraints and trade-offs☆.pdf:pdf},
issn = {15708667},
journal = {Journal of Discrete Algorithms},
month = mar,
number = {1},
pages = {109--124},
title = {{Radial drawings of graphs: Geometric constraints and trade-offs☆}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S1570866707000159},
volume = {6},
year = {2008}
}
@incollection{Dogrusoz2005,
abstract = {We present a new compound graph layout algorithm based on traditional force-directed layout scheme with extensions for nesting and other application-specific constraints. The algorithm has been successfully implemented within Patika, a pathway analysis tool for drawing complicated biological pathways with compartmental constraints and arbitrary nesting relations to represent molecular complexes and pathway abstractions. Experimental results show that execution times and quality of the produced drawings with respect to commonly accepted layout criteria and pathway drawing conventions are quite satisfactory.},
address = {Berlin, Heidelberg},
annote = {Some papers may have been published only because their title looked good... this is one of them. Incremental improvement to spring-embedded layout.},
author = {Dogrusoz, Ugur and Giral, Erhan and Cetintas, Ahmet and Civril, Ali and Demir, Emek},
booktitle = {Graph Drawing},
doi = {10.1007/b105810},
editor = {Pach, J\'{a}nos},
isbn = {978-3-540-24528-5},
pages = {442--447--447},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{A Compound Graph Layout Algorithm for Biological Pathways}},
url = {http://www.springerlink.com/content/1f4pl3gvwrqf33qn/},
volume = {3383},
year = {2005}
}
@article{Dunne,
annote = {May use for evaluation of radial layout},
author = {Dunne, Cody and Shneiderman, Ben},
file = {:home/lynxoid/Documents/Mendeley Desktop/Unknown/Dunne, Shneiderman/Dunne, Shneiderman - Unknown - Improving Graph Drawing Readability by Incorporating Readability Metrics A Software Tool for Network Analysts.pdf:pdf},
keywords = {aesthetic,graph drawing,information visualization,network analysis,readability metrics,social},
title = {{Improving Graph Drawing Readability by Incorporating Readability Metrics : A Software Tool for Network Analysts}}
}
@inproceedings{Dwyer2010,
abstract = {Recent work on constrained graph layout has involved projection of simple two-variable linear equality and inequality constraints in the context of majorization or gradient-projection based optimization. While useful classes of containment, alignment and rectangular non-overlap constraints could be built using this framework, a severe limitation was that the layout used an axis-separation approach such that all constraints had to be axis aligned. In this paper we use techniques from Procrustes Analysis to extend the gradient-projection approach to useful types of non-linear constraints. The constraints require subgraphs to be locally fixed into various geometries—such as circular cycles or local layout obtained by a combinatorial algorithm (e.g. orthogonal or layered-directed)—but then allow these sub-graph geometries to be integrated into a larger layout through translation, rotation and scaling.},
address = {Berlin, Heidelberg},
author = {Dwyer, Tim and Robertson, George},
doi = {10.1007/978-3-642-11805-0},
editor = {Eppstein, David and Gansner, Emden R.},
isbn = {978-3-642-11804-3},
pages = {393--404--404},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Layout with Circular and Other Non-linear Constraints Using Procrustes Projection}},
url = {http://www.springerlink.com/content/935132x261038351/},
volume = {5849},
year = {2010}
}
@inproceedings{Eppstein2011,
abstract = {We show that every graph of maximum degree three can be drawn in three dimensions with at most two bends per edge, and with 120° angles between any two edge segments meeting at a vertex or a bend. We show that every graph of maximum degree four can be drawn in three dimensions with at most three bends per edge, and with 109.5° angles, i.e., the angular resolution of the diamond lattice, between any two edge segments meeting at a vertex or bend.},
address = {Berlin, Heidelberg},
author = {Eppstein, David and L\"{o}ffler, Maarten and Mumford, Elena and N\"{o}llenburg, Martin},
doi = {10.1007/978-3-642-18469-7},
editor = {Brandes, Ulrik and Cornelsen, Sabine},
isbn = {978-3-642-18468-0},
pages = {208--219--219},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Optimal 3D Angular Resolution for Low-Degree Graphs}},
url = {http://www.springerlink.com/content/821g800r052k0v54/},
volume = {6502},
year = {2011}
}
@incollection{Erten2004,
abstract = {GraphAEL extracts three types of evolving graphs from the Graph Drawing literature and creates 2D and 3D animations of the evolutions. We study citation graphs, topic graphs, and collaboration graphs. We also create difference graphs which capture the nature of change between two given time periods. GraphAEL can be accessed online at http://graphael.cs.arizona.edu.},
address = {Berlin, Heidelberg},
author = {Erten, Cesim and Harding, Philip and Kobourov, Stephen and Wampler, Kevin and Yee, Gary},
booktitle = {Graph Drawing},
doi = {10.1007/b94919},
editor = {Liotta, Giuseppe},
isbn = {978-3-540-20831-0},
keywords = {dynamic]},
mendeley-tags = {dynamic]},
pages = {98--110--110},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{GraphAEL: Graph Animations with Evolving Layouts}},
url = {http://www.springerlink.com/content/4pt8gbhu8eqyyk7e/},
volume = {2912},
year = {2004}
}
@incollection{Erten2004a,
abstract = {Given two different drawings of a planar graph we consider the problem of morphing one drawing into the other. We designed and implemented an algorithm for intersection-free morphing of planar graphs. Our algorithm uses a combination of different techniques to achieve smooth transformations: rigid morphing, compatible triangulations, as well as morphing based on interpolation of the convex representations of the graphs. Our algorithm can morph between drawings with straight-line segments, bends, and curves. Our system is implemented in Java and available as an applet at http://gmorph.cs.arizona.edu.},
address = {Berlin, Heidelberg},
author = {Erten, Cesim and Kobourov, Stephen and Pitta, Chandan},
booktitle = {Graph Drawing},
doi = {10.1007/b94919},
editor = {Liotta, Giuseppe},
isbn = {978-3-540-20831-0},
keywords = {dynamic},
mendeley-tags = {dynamic},
pages = {320--331--331},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Intersection-Free Morphing of Planar Graphs}},
url = {http://www.springerlink.com/content/0y9x3y8mx1tmyx7u/},
volume = {2912},
year = {2004}
}
@incollection{Friedrich2002,
abstract = {Enabling the user of a graph drawing system to preserve the mental map between two different layouts of a graph is a major problem. Whenever a layout in a graph drawing system is modified, the mental map of the user must be preserved. One way in which the user can be helped in understanding a change of layout is through animation of the change. In this paper, we present clustering-based strategies for identifying groups of nodes sharing a common, simple motion from initial layout to final layout. Transformation of these groups is then handled separately in order to generate a smooth animation.},
address = {Berlin, Heidelberg},
annote = {Same graph, 2 diff layouts (after changing params) - animate the change between two layouts
        
Identify groups of vertices that would need to move
        
use k-mean to find groups of nodes that have max sum of dist to final destinations},
author = {Friedrich, Carsten and Houle, Michael},
booktitle = {Graph Drawing},
doi = {10.1007/3-540-45848-4},
editor = {Mutzel, Petra and J\"{u}nger, Michael and Leipert, Sebastian},
file = {:home/lynxoid/Documents/Mendeley Desktop/Graph Drawing/Friedrich, Houle/Friedrich, Houle - 2002 - Graph Drawing in Motion II.pdf:pdf},
isbn = {978-3-540-43309-5},
keywords = {dynamic},
mendeley-tags = {dynamic},
month = feb,
pages = {122--125--125},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Graph Drawing in Motion II}},
url = {http://www.springerlink.com/content/xkf8f9ybduth6lg0/},
volume = {2265},
year = {2002}
}
@inproceedings{Gansner2007,
abstract = {Circular graph layout is a drawing scheme where all nodes are placed on the perimeter of a circle. An inherent issue with circular layouts is that the rigid restriction on node placement often gives rise to long edges and an overall dense drawing. We suggest here three independent, complementary techniques for lowering the density and improving the readability of circular layouts. First, a new algorithm is given for placing the nodes on the circle such that edge lengths are reduced. Second, we enhance the circular drawing style by allowing some of the edges to be routed around the exterior of the circle. This is accomplished with an algorithm for optimally selecting such a set of externally routed edges. The third technique reduces density by coupling groups of edges as bundled splines that share part of their route. Together, these techniques are able to reduce clutter, density and crossings compared with existing methods.},
address = {Berlin, Heidelberg},
annote = {circular layout for a general graph - put nodes on a circle, optimize edge draing to minimize crossover. allows edges to go outside the circle},
author = {Gansner, Emden and Koren, Yehuda},
doi = {10.1007/978-3-540-70904-6},
editor = {Kaufmann, Michael and Wagner, Dorothea},
file = {:home/lynxoid/Documents/Mendeley Desktop/Unknown/Gansner, Koren/Gansner, Koren - 2007 - Improved Circular Layouts.pdf:pdf;::},
isbn = {978-3-540-70903-9},
pages = {386--398--398},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Improved Circular Layouts}},
url = {http://www.springerlink.com/content/e0t5172328185qh0/},
volume = {4372},
year = {2007}
}
@incollection{Genc2004,
abstract = {We present a new elegant algorithm for layout of biological signaling pathways. It uses a force-directed layout scheme, taking into account directional and regional constraints enforced by different molecular interaction types and subcellular locations in a cell. The algorithm has been successfully implemented as part of a pathway integration and analysis toolkit named PATIKA and results with respect to computational complexity and quality of the layout have been found satisfactory.},
address = {Berlin, Heidelberg},
author = {Genc, Burkay and Dogrusoz, Ugur},
booktitle = {Graph Drawing},
doi = {10.1007/b94919},
editor = {Liotta, Giuseppe},
isbn = {978-3-540-20831-0},
pages = {314--319--319},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{A Constrained, Force-Directed Layout Algorithm for Biological Pathways}},
url = {http://www.springerlink.com/content/ngjqv8hndgt82au6/},
volume = {2912},
year = {2004}
}
@inproceedings{Geyer2011,
abstract = {When working with graphs one often faces the problem of comparing two or more graphs. For example in biology, when two protein-protein interaction networks from closely related species have to be compared, the graphs can easily contain several hundred nodes and thousands of edges but very few differences. Our goal was to develop a software-tool that creates an overview of large graphs and maintains the structure but reduces the number of nodes and edges and enables the user to easily find and investigate the areas of interest. This problem has been considered in the past by various groups ([1], [2]) and different heuristics have been proposed. Here, we follow the concept proposed in [3]. For this work, we assume that the input-graphs are relatively large with small local differences and node correspondences are known.},
address = {Berlin, Heidelberg},
annote = {graphs are small - 350 nodes. 
authors mention comparison between 2 ppi networks of related species - do not show data for it, never actually compare networks. 
speculate that there will be few local differences. 
assume node correspondences are known - but it is a problem in itself (hence: network alignment)},
author = {Geyer, Markus and Kaufmann, Michael and Krug, Robert},
doi = {10.1007/978-3-642-18469-7},
editor = {Brandes, Ulrik and Cornelsen, Sabine},
isbn = {978-3-642-18468-0},
pages = {393--394--394},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Visualizing Differences between Two Large Graphs}},
url = {http://www.springerlink.com/content/n0031121x7236533/},
volume = {6502},
year = {2011}
}
@inproceedings{Gorke2008,
abstract = {The analysis and the exploration of complex networks nowadays involves the identification of a multitude of analytic properties that have been ascertained to constitute crucial characteristics of networks. We propose a new layout paradigm for drawing large networks, with a focus on decompositional properties. The visualization is based on the general shape of an annulus and supports the immediate recognition of a large number of abstract features of the decomposition while drawing all elements. Our layouts offer remarkable readability of the decompositional connectivity and are capable of revealing subtle structural traits.},
address = {Berlin, Heidelberg},
author = {G\"{o}rke, Robert and Gaertler, Marco and Wagner, Dorothea},
doi = {10.1007/978-3-540-77537-9},
editor = {Hong, Seok-Hee and Nishizeki, Takao and Quan, Wu},
isbn = {978-3-540-77536-2},
pages = {352--364--364},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{LunarVis – Analytic Visualizations of Large Graphs}},
url = {http://www.springerlink.com/content/aq444257835541w5/},
volume = {4875},
year = {2008}
}
@inproceedings{Gretarsson2010,
abstract = {Traditional network visualization tools inherently suffer from scalability problems, particularly when such tools are interactive and web-based. In this paper we introduce WiGis –Web-based Interactive Graph Visualizations. WiGis exemplify a fully web-based framework for visualizing large-scale graphs natively in a user’s browser at interactive frame rates with no discernible associated startup costs. We demonstrate fast, interactive graph animations for up to hundreds of thousands of nodes in a browser through the use of asynchronous data and image transfer. Empirical evaluations show that our system outperforms traditional web-based graph visualization tools by at least an order of magnitude in terms of scalability, while maintaining fast, high-quality interaction.},
address = {Berlin, Heidelberg},
author = {Gretarsson, Brynjar and Bostandjiev, Svetlin and O’Donovan, John and H\"{o}llerer, Tobias},
doi = {10.1007/978-3-642-11805-0},
editor = {Eppstein, David and Gansner, Emden R.},
isbn = {978-3-642-11804-3},
pages = {119--134--134},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{WiGis: A Framework for Scalable Web-Based Interactive Graph Visualizations}},
url = {http://www.springerlink.com/content/9768q60438977178/},
volume = {5849},
year = {2010}
}
@incollection{Hachul2006,
abstract = {In the last decade several algorithms that generate straight-line drawings of general large graphs have been invented. In this paper we investigate some of these methods that are based on force-directed or algebraic approaches in terms of running time and drawing quality on a big variety of artificial and real-world graphs. Our experiments indicate that there exist significant differences in drawing qualities and running times depending on the classes of tested graphs and algorithms.},
address = {Berlin, Heidelberg},
author = {Hachul, Stefan and J\"{u}nger, Michael},
booktitle = {Graph Drawing},
doi = {10.1007/11618058},
editor = {Healy, Patrick and Nikolov, Nikola S.},
isbn = {978-3-540-31425-7},
pages = {235--250--250},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{An Experimental Comparison of Fast Algorithms for Drawing General Large Graphs}},
url = {http://www.springerlink.com/content/p22q4271k72734qn/},
volume = {3843},
year = {2006}
}
@book{Heath2009,
abstract = {Biology contains a wealth of network data, such as metabolic, transcription, signaling and protein-protein interaction networks. Our research currently focuses on metabolic networks, although similar ideas may be applied to other biological networks. Metabolic networks consist of the chemical compounds and reactions necessary to support life. Traditionally, series of successive metabolic reactions have been organized into simple metabolic pathways and manually drawn. However, as we move into the era of systems biology, it is becoming apparent that automated ways of processing and visualizing metabolic networks must be developed.},
address = {Berlin, Heidelberg},
author = {Heath, Allison and Bennett, George and Kavraki, Lydia},
doi = {10.1007/978-3-642-00219-9},
editor = {Tollis, Ioannis G. and Patrignani, Maurizio},
isbn = {978-3-642-00218-2},
issn = {0302-9743},
pages = {441--442--442},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Visualizing the Results of Metabolic Pathway Queries}},
url = {http://www.springerlink.com/content/q64545600h2392gv/},
volume = {5417},
year = {2009}
}
@incollection{Ho2006,
abstract = {Clustered graph is a very useful model for drawing large and complex networks. This paper presents a new method for drawing clustered graphs in three dimensions. The method uses a divide and conquer approach. More specifically, it draws each cluster in a 2D plane to minimise occlusion and ease navigation. Then a 3D drawing of the whole graph is constructed by combining these 2D drawings.   Our main contribution is to develop three linear time weighted tree drawing algorithms in three dimensions for clustered graph layout. Further, we have implemented a series of six different layouts for clustered graphs by combining three 3D tree layouts and two 2D graph layouts. The experimental results with metabolic pathways show that our method can produce a nice drawing of a clustered graph which clearly shows visual separation of the clusters, as well as highlighting the relationships between the clusters. Sample drawings are available from http://www.cs.usyd.edu.au/\~{}visual/valacon/gallery/C3D/},
address = {Berlin, Heidelberg},
author = {Ho, Joshua and Hong, Seok-Hee},
booktitle = {Graph Drawing},
doi = {10.1007/11618058},
editor = {Healy, Patrick and Nikolov, Nikola S.},
isbn = {978-3-540-31425-7},
pages = {492--502--502},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Drawing Clustered Graphs in Three Dimensions}},
url = {http://www.springerlink.com/content/72t656212777l63k/},
volume = {3843},
year = {2006}
}
@incollection{Hong2006,
abstract = {A workshop on Network Analysis and Visualisation was held on September 11, 2005 in Limerick Ireland, in conjunction with 2005 Graph Drawing conference. This report review the background, progress and results of the Workshop.},
address = {Berlin, Heidelberg},
author = {Hong, Seok-Hee},
booktitle = {Graph Drawing},
doi = {10.1007/11618058},
editor = {Healy, Patrick and Nikolov, Nikola S.},
isbn = {978-3-540-31425-7},
pages = {524--527--527},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Network Analysis and Visualisation}},
url = {http://www.springerlink.com/content/p243w1nq32887278/},
volume = {3843},
year = {2006}
}
@incollection{Huang1998,
abstract = {This paper describes DA-TU, which combines an animated clustering and an online force-directed animated graph drawing method for the visualization of huge graphs.},
address = {Berlin, Heidelberg},
author = {Huang, Mao and Eades, Peter},
booktitle = {Graph Drawing},
doi = {10.1007/3-540-37623-2},
editor = {Whitesides, Sue H.},
isbn = {978-3-540-65473-5},
month = jan,
pages = {374--383--383},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{A Fully Animated Interactive System for Clustering and Navigating Huge Graphs}},
url = {http://www.springerlink.com/content/74a403xh3wxxtpqw/},
volume = {1547},
year = {1998}
}
@incollection{Huang2006,
abstract = {This paper describes a within-subjects experiment in which we compare the relative effectiveness of five sociogram drawing conventions in communicating underlying network substance, based on user task performance and usability preference, in order to examine effects of different spatial layout formats on human sociogram perception. We also explore the impact of edge crossings, a widely accepted readability aesthetic. Subjective data were gathered based on the methodology of Purchase et al.[14] Objective data were collected through an online system.   We found that both edge crossings and conventions pose significant affects on user preference and task performance of finding groups, but either has little impact on the perception of actor status. On the other hand, the node positioning and angular resolution might be more important in perceiving actor status. In visualizing social networks, it is important to note that the techniques that are highly preferred by users do not necessarily lead to best task performance.},
address = {Berlin, Heidelberg},
author = {Huang, Weidong and Hong, Seok-Hee and Eades, Peter},
booktitle = {Graph Drawing},
doi = {10.1007/11618058},
editor = {Healy, Patrick and Nikolov, Nikola S.},
isbn = {978-3-540-31425-7},
pages = {262--273--273},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Layout Effects on Sociogram Perception}},
url = {http://www.springerlink.com/content/7x22r2344wv86881/},
volume = {3843},
year = {2006}
}
@incollection{Kimelman1995,
author = {Kimelman, Doug and Leban, Bruce and Roth, Tova and Zernik, Dror},
booktitle = {Graph Drawing},
doi = {10.1007/3-540-58950-3\_373},
editor = {Tamassia, Roberto and Tollis, Ioannis},
keywords = {dynamic},
pages = {218--225--225},
publisher = {Springer Berlin / Heidelberg},
title = {{Reduction of visual complexity in dynamic graphs}},
url = {http://www.springerlink.com/content/y865m45745316163/},
volume = {894},
year = {1995}
}
@inproceedings{Lehmann2007,
abstract = {The need to visualize large and complex networks has strongly increased in the last decade. Although networks with more than 1000 vertices seem to be prohibitive for a comprehensive layout, real-world networks exhibit a very inhomogenous edge density that can be harnessed to derive an aesthetic and structured layout. Here, we will present a heuristic that finds a spanning tree with a very low average spanner property for the non-tree edges, the so-called backbone of a network. This backbone can then be used to apply a modified tree-layout algorithm to draw the whole graph in a way that highlights dense parts of the graph, so-called clusters, and their inter-connections.},
address = {Berlin, Heidelberg},
author = {Lehmann, Katharina and Kottler, Stephan},
doi = {10.1007/978-3-540-70904-6},
editor = {Kaufmann, Michael and Wagner, Dorothea},
isbn = {978-3-540-70903-9},
pages = {240--251--251},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Visualizing Large and Clustered Networks}},
url = {http://www.springerlink.com/content/4x54pw1686424uk6/},
volume = {4372},
year = {2007}
}
@inproceedings{Nachmanson2008,
abstract = {This paper describes novel methods we developed to lay out graphs using Sugiyama’s scheme [16] in a tool named GLEE. The main contributions are: a heuristic for creating a graph layout with a given aspect ratio, an efficient method of edge-crossings counting while performing adjacent vertex swaps, and a simple and fast spline routing algorithm.},
address = {Berlin, Heidelberg},
author = {Nachmanson, Lev and Robertson, George and Lee, Bongshin},
doi = {10.1007/978-3-540-77537-9},
editor = {Hong, Seok-Hee and Nishizeki, Takao and Quan, Wu},
isbn = {978-3-540-77536-2},
pages = {389--394--394},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Drawing Graphs with GLEE}},
url = {http://www.springerlink.com/content/t7l0x055knw25314/},
volume = {4875},
year = {2008}
}
@inproceedings{Nguyen2011,
abstract = {Recent empirical research has shown that increasing the angle of crossings reduces the effect of crossings and improves human readability [5]. In this paper, we introduce a post-processing algorithm, namely MAXCIR, that aims to increase crossing angles of circular layouts by using Quadratic Programming. Experimental results indicate that our method significantly increases crossing angles compared to the traditional equal-spacing algorithm, and that the running time is fairly negligible.},
address = {Berlin, Heidelberg},
annote = {circular layout - general graph (!star), edges inside. large crossing angles "making graph more readable" (DOUBTFUL!!!), authors propose an alg that reorders vertices to increase the sum of crossing angles},
author = {Nguyen, Quan and Eades, Peter and Hong, Seok-Hee and Huang, Weidong},
doi = {10.1007/978-3-642-18469-7},
editor = {Brandes, Ulrik and Cornelsen, Sabine},
isbn = {978-3-642-18468-0},
pages = {397--399--399},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Large Crossing Angles in Circular Layouts}},
url = {http://www.springerlink.com/content/y0n65j8258871h72/},
volume = {6502},
year = {2011}
}

@incollection{Papadopoulos2006,
abstract = {In this paper we present an algorithm for drawing an undirected graph G which takes advantage of the structure of the modular decomposition tree of G. Specifically, our algorithm works by traversing the modular decomposition tree of the input graph G on n vertices and m edges, in a bottom-up fashion until it reaches the root of the tree, while at the same time intermediate drawings are computed. In order to achieve aesthetically pleasing results, we use grid and circular placement techniques, and utilize an appropriate modification of a well-known spring embedder algorithm. It turns out, that for some classes of graphs, our algorithm runs in O(n+m) time, while in general, the running time is bounded in terms of the processing time of the spring embedder algorithm. The result is a drawing that reveals the structure of the graph G and preserves certain aesthetic criteria.},
address = {Berlin, Heidelberg},
author = {Papadopoulos, Charis and Voglis, Constantinos},
booktitle = {Graph Drawing},
doi = {10.1007/11618058},
editor = {Healy, Patrick and Nikolov, Nikola S.},
isbn = {978-3-540-31425-7},
pages = {343--354--354},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Drawing Graphs Using Modular Decomposition}},
url = {http://www.springerlink.com/content/7t25207p8w36q763/},
volume = {3843},
year = {2006}
}
@book{Pinaud2011,
abstract = {It is easy to find graph visualization applications for all sorts of uses. However, choosing an appropriate application may be difficult. This poster presents a website ( http://gvsr.polytech.univ-nantes.fr/ ) built to help users to choose a program adapted to their problems. So far, this site references eighty programs and aims at helping users both in their choices and in comparing the programs. The site is also designed as a tool repository helping the community to access and compare the available tools, and benchmark new techniques and algorithms.},
address = {Berlin, Heidelberg},
author = {Pinaud, Bruno and Kuntz, Pascale},
doi = {10.1007/978-3-642-18469-7},
editor = {Brandes, Ulrik and Cornelsen, Sabine},
isbn = {978-3-642-18468-0},
pages = {400--401--401},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{GVSR: An On-Line Guide for Choosing a Graph Visualization Software}},
url = {http://www.springerlink.com/content/p624374612814123/},
volume = {6502},
year = {2011}
}
@inproceedings{Pinaud2007,
abstract = {Graph drawing software are now commonly used. However, the choice of a well-adapted program may be hard for an inexperienced user. This poster presents a website (http://www.polytech.univ-nantes.fr/GVSR/) built to help users choose a program adapted to their problems. So far, this site uniformely presents fifty programs and aims at helping users both in their choices and in comparing the programs.},
address = {Berlin, Heidelberg},
annote = {A website with refs to graph drawing papers, organized by subtopic},
author = {Pinaud, Bruno and Kuntz, Pascale and Picarougne, Fabien},
doi = {10.1007/978-3-540-70904-6},
editor = {Kaufmann, Michael and Wagner, Dorothea},
isbn = {978-3-540-70903-9},
pages = {440--441--441},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{The Website for Graph Visualization Software References (GVSR)}},
url = {http://www.springerlink.com/content/528444200711p2n5/},
volume = {4372},
year = {2007}
}
@incollection{Purchase1997,
abstract = {In the creation of graph drawing algorithms and systems, designers claim that by producing layouts that optimise certain aesthetic qualities, the graphs are easier to understand. Such aesthetics include maximise symmetry, minimise edge crosses and minimise bends.},
address = {Berlin/Heidelberg},
author = {Purchase, Helen},
booktitle = {Graph Drawing},
doi = {10.1007/3-540-63938-1},
editor = {DiBattista, Giuseppe},
isbn = {3-540-63938-1},
pages = {248--261--261},
publisher = {Springer-Verlag},
series = {Lecture Notes in Computer Science},
title = {{Which aesthetic has the greatest effect on human understanding?}},
url = {http://www.springerlink.com/content/39m598l76588240l/},
volume = {1353},
year = {1997}
}
@inproceedings{Purchase2006,
abstract = {While some research has been performed on the human understanding of static graph layout algorithms, dynamic graph layout algorithms have only recently been developed sufficiently to enable similar investigations. This paper presents the first empirical analysis of a dynamic graph layout algorithm, focusing on the assumption that maintaining the mental map between time-slices assists with the comprehension of the evolving graph. The results confirm this assumption with respect to some categories of tasks.},
address = {Berlin, Heidelberg},
author = {Purchase, Helen and Hoggan, Eve and G\"{o}rg, Carsten},
booktitle = {Graph Drawing},
doi = {10.1007/978-3-540-70904-6},
editor = {Kaufmann, Michael and Wagner, Dorothea},
file = {:home/lynxoid/Documents/Mendeley Desktop/Graph Drawing/Purchase, Hoggan, G\"{o}rg/Purchase, Hoggan, G\"{o}rg - 2006 - How Important Is the “Mental Map” – An Empirical Investigation of a Dynamic Graph Layout Algorithm.pdf:pdf},
isbn = {978-3-540-70903-9},
keywords = {dynamic},
mendeley-tags = {dynamic},
pages = {184--195},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{How Important Is the “Mental Map”? – An Empirical Investigation of a Dynamic Graph Layout Algorithm}},
url = {http://www.springerlink.com/content/t771t31jw72165q4/},
volume = {4372},
year = {2006}
}
@incollection{Raitner2005,
abstract = {This project was inspired by the last year’s paper on Selected Open Problems in Graph Drawing by Brandenburg et al. (Proc. 11th GD. Vol. 2919 of LNCS. (2003) 515–539). While being a very good start, a paper is inherently static and will become out-dated. For dynamic content, what open problems (hopefully) are, a web-site is more appropriate. Keeping such a site up-to-date, however, is time consuming and requires good knowledge of recent work. In projects like the free encyclopedia Wikipedia these obstacles are overcome with a collaborative approach: everyone is allowed, and even requested, to contribute his knowledge to the site. The Open Problems Wiki makes use of this paradigm to provide a forum for collecting open problems in graph drawing.},
address = {Berlin, Heidelberg},
author = {Raitner, Marcus},
booktitle = {Graph Drawing},
doi = {10.1007/b105810},
editor = {Pach, J\'{a}nos},
isbn = {978-3-540-24528-5},
pages = {508--509--509},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Open Problems Wiki}},
url = {http://www.springerlink.com/content/2g3fecx749qvtjn3/},
volume = {3383},
year = {2005}
}
@inproceedings{Siebenhaller2007,
abstract = {In this paper we consider the problem of creating partitioned drawings of graphs. In a partitioned drawing each vertex is placed inside a given partition cell of a rectangular partition of the drawing area. This problem has several applications in practice, e.g. for UML activity diagrams or wiring schematics. We first formalize the problem and analyze its complexity. Then we give a heuristic approach which is based on the topology-shape-metrics approach and produces partitioned drawings in time O((|V| + c)2log(|V| + c)), where c denotes the number of crossings.},
address = {Berlin, Heidelberg},
author = {Siebenhaller, Martin},
doi = {10.1007/978-3-540-70904-6},
editor = {Kaufmann, Michael and Wagner, Dorothea},
isbn = {978-3-540-70903-9},
pages = {252--257--257},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Partitioned Drawings}},
url = {http://www.springerlink.com/content/c23q462q344141r0/},
volume = {4372},
year = {2007}
}

@inproceedings{Tegner2009,
abstract = {Over the last decade networks has become a unifying language in biology. Yet we are only in the beginning of understanding their significance for biology and their medical applications. I will talk about the diversity of biological networks composed either of genes, proteins, metabolites, or cells and the associated methods for finding these graphs in the data. Next I will provide an overview of different methods of analysis and what kind of insights that have been obtained. During the talk I will highlight current challenging problems requiring computational skills with respect to identification, analysis, algorithms, visualization and software.},
address = {Berlin, Heidelberg},
author = {Tegn\'{e}r, Jesper},
doi = {10.1007/978-3-642-00219-9},
editor = {Tollis, Ioannis G. and Patrignani, Maurizio},
isbn = {978-3-642-00218-2},
issn = {0302-9743},
pages = {1--1--1},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Networks in Biology – From Identification, Analysis to Interpretation}},
url = {http://www.springerlink.com/content/wh014611117611r7/},
volume = {5417},
year = {2009}
}
@inproceedings{Tsiaras2009,
abstract = {Brain Network Analyzer is an application, written in Java, that displays and analyzes synchronization networks from brain signals. The program implements a number of network indices and visualization techniques. The program has been used to analyze networks produced by electroencephalogram data of alcoholic and control patients.},
address = {Berlin, Heidelberg},
author = {Tsiaras, Vassilis and Tollis, Ioannis G. and Sakkalis, Vangelis},
doi = {10.1007/978-3-642-00219-9},
editor = {Tollis, Ioannis G. and Patrignani, Maurizio},
isbn = {978-3-642-00218-2},
issn = {0302-9743},
pages = {451--452--452},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Brain Network Analyzer}},
url = {http://www.springerlink.com/content/u7222m1871443t07/},
volume = {5417},
year = {2009}
}
@misc{,
file = {:home/lynxoid/Documents/Mendeley Desktop/Unknown/Unknown/Unknown - Unknown - k-core decomposition a tool for the visualization of large scale networks.html:html},
title = {k-core decomposition: a tool for the visualization of large scale networks},
url = {http://arxiv.org/pdf/cs/0504107v2},
urldate = {18/11/11}
}
